diff -uNr luagit2-master/src/luagit2/blob/lua_blob.c luagit2-master_patched/src/luagit2/blob/lua_blob.c
--- luagit2-master/src/luagit2/blob/lua_blob.c	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/blob/lua_blob.c	2020-09-17 22:25:48.080460834 +0200
@@ -59,16 +59,14 @@
     luagit2_buf *lua_out_buf;
 
     lua_out_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_out_buf));
-    lua_out_buf->buf = NULL;
+    lua_git_buf_init(lua_out_buf);
 
     luaL_newmetatable(L, "luagit2_buf");
     lua_setmetatable(L, -2);
 
-    git_buf *local_buf;
-    check_error_long(git_blob_filtered_content(local_buf, lua_blob->blob, as_path, check_for_binary_data),
+    check_error_long(git_blob_filtered_content(&(lua_out_buf->buf), lua_blob->blob, as_path, check_for_binary_data),
         "Error getting filteres content of the blob", NULL);
 
-    lua_out_buf->buf  = local_buf;
     return 1;
 }
 
diff -uNr luagit2-master/src/luagit2/buf/lua_buf.c luagit2-master_patched/src/luagit2/buf/lua_buf.c
--- luagit2-master/src/luagit2/buf/lua_buf.c	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/buf/lua_buf.c	2020-09-17 22:09:54.391164684 +0200
@@ -10,15 +10,13 @@
 	const char *string_value = luaL_checkstring(L, 1);
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL,0);
-	check_error_long(git_buf_set(&local_buf, string_value, strlen(string_value)),
+	check_error_long(git_buf_set(&(lua_buf->buf), string_value, strlen(string_value)),
 	    "Unable to set char in the buf", NULL);
-	lua_buf->buf = &local_buf;
 
 	return 1;
 }
@@ -30,6 +28,6 @@
     }
 
 	luagit2_buf *buf_to_free = (luagit2_buf *)luaL_checkudata(L, 1,"luagit2_buf");
-	git_buf_free(buf_to_free->buf);
+	git_buf_free(&(buf_to_free->buf));
 	return 1;
 }
diff -uNr luagit2-master/src/luagit2/buf/lua_buf_help.c luagit2-master_patched/src/luagit2/buf/lua_buf_help.c
--- luagit2-master/src/luagit2/buf/lua_buf_help.c	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/buf/lua_buf_help.c	2020-09-17 22:28:18.797230537 +0200
@@ -9,8 +9,15 @@
     // We have not used luaL_checkdata here Because it was causing errors.
 
 	const luagit2_buf *Buffer = (luagit2_buf *)lua_touserdata(L, 1);
-	const char *String_Value = (char *)((Buffer->buf)->ptr);
-	lua_pushstring(L, String_Value);
+	lua_pushstring(L, Buffer->buf.ptr);
 
 	return 1;
-}
\ No newline at end of file
+}
+
+
+void lua_git_buf_init(luagit2_buf *ptBuf)
+{
+	ptBuf->buf.ptr = NULL;
+	ptBuf->buf.asize = 0;
+	ptBuf->buf.size = 0;
+}
diff -uNr luagit2-master/src/luagit2/buf/lua_buf_help.h luagit2-master_patched/src/luagit2/buf/lua_buf_help.h
--- luagit2-master/src/luagit2/buf/lua_buf_help.h	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/buf/lua_buf_help.h	2020-09-17 22:08:24.382584292 +0200
@@ -4,5 +4,6 @@
 #include "../common/lua_common.h"
 
 int lua_git_buf_details(lua_State *L);
+void lua_git_buf_init(luagit2_buf *ptBuf);
 
 #endif
diff -uNr luagit2-master/src/luagit2/commit/lua_commit.c luagit2-master_patched/src/luagit2/commit/lua_commit.c
--- luagit2-master/src/luagit2/commit/lua_commit.c	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/commit/lua_commit.c	2020-09-17 22:11:49.715876368 +0200
@@ -62,22 +62,18 @@
 	luagit2_repository *Repo = (luagit2_repository *)luaL_checkudata(L, 1,"luagit2_repository");
 	luagit2_oid *Commit_id = (luagit2_oid *)luaL_checkudata(L, 2,"luagit2_oid");
 
-	git_buf local_sign_buf = GIT_BUF_INIT_CONST(NULL,0);
-	git_buf local_extra_buf =  GIT_BUF_INIT_CONST(NULL,0);
-	check_error_long(git_commit_extract_signature(&local_sign_buf, &local_extra_buf,
-	        Repo->repo, &(Commit_id->oid), NULL), "Error extracting signature from given commit id", NULL);
-
 	luagit2_buf *lua_signature_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_signature_buf));
-	lua_signature_buf->buf = NULL;
+	lua_git_buf_init(lua_signature_buf);
 	luaL_newmetatable(L, "luagit2_buf");
 	lua_setmetatable(L, -2);
-	lua_signature_buf->buf  = &local_sign_buf;
 
 	luagit2_buf *lua_extra_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_extra_buf));
-	lua_extra_buf->buf = NULL;
+	lua_git_buf_init(lua_extra_buf);
 	luaL_newmetatable(L, "luagit2_buf");
 	lua_setmetatable(L, -2);
-	lua_extra_buf->buf  = &local_extra_buf;
+
+	check_error_long(git_commit_extract_signature(&(lua_signature_buf->buf), &(lua_extra_buf->buf),
+	        Repo->repo, &(Commit_id->oid), NULL), "Error extracting signature from given commit id", NULL);
 
 	return 2;
 }
@@ -94,17 +90,14 @@
 	luagit2_buf *lua_header_buf;
 
 	lua_header_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_header_buf));
-	lua_header_buf->buf = NULL;
+	lua_git_buf_init(lua_header_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 	lua_setmetatable(L, -2);
 
-	git_buf local_out_buf = {0};
-	check_error_long(git_commit_header_field(&local_out_buf, Commit->commit, field),
+	check_error_long(git_commit_header_field(&(lua_header_buf->buf), Commit->commit, field),
 	    "Error getting header field for the given commit", NULL);
 
-	lua_header_buf->buf  = &local_out_buf;
-
 	return 1;
 }
 
diff -uNr luagit2-master/src/luagit2/config/lua_config.c luagit2-master_patched/src/luagit2/config/lua_config.c
--- luagit2-master/src/luagit2/config/lua_config.c	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/config/lua_config.c	2020-09-17 22:11:07.627620348 +0200
@@ -44,16 +44,14 @@
 	luagit2_buf *lua_buf;
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf  = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-	check_error_long(git_config_find_global(&local_buf),
+	check_error_long(git_config_find_global(&(lua_buf->buf)),
 	    "Unable to find global config ", NULL);
-	lua_buf->buf  = &local_buf;
 	return 1;
 }
 
@@ -66,16 +64,14 @@
 	luagit2_buf *lua_buf;
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf  = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-	check_error_long(git_config_find_programdata(&local_buf),
+	check_error_long(git_config_find_programdata(&(lua_buf->buf)),
 	    "Unable to find locate the path to the configuration file in ProgramData", NULL);
-	lua_buf->buf  = &local_buf;
 
 
 	return 1;
@@ -91,17 +87,14 @@
 
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf  = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-	check_error_long(git_config_find_system(&local_buf),
+	check_error_long(git_config_find_system(&(lua_buf->buf)),
 	    "Unable to locate the path to the system configuration file", NULL);
-	lua_buf->buf  = &local_buf;
-
 
 	return 1;
 }
@@ -116,17 +109,14 @@
 
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf  = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-	check_error_long(git_config_find_xdg(&local_buf),
+	check_error_long(git_config_find_xdg(&(lua_buf->buf)),
 	    "Unable to Locate the path to the global xdg compatible configuration file", NULL);
-	lua_buf->buf  = &local_buf;
-
 
 	return 1;
 }
@@ -200,17 +190,14 @@
 	const char *name = luaL_checkstring(L, 2);
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf  = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-	check_error_long(git_config_get_path(&local_buf, parent_cfg->cfg, name),
+	check_error_long(git_config_get_path(&(lua_buf->buf), parent_cfg->cfg, name),
 	    "Unable to get path for the config file", NULL);
-	lua_buf->buf  = &local_buf;
-
 
 	return 1;
 }
@@ -246,16 +233,14 @@
 	const char *name = luaL_checkstring(L, 2);
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf  = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-	check_error_long(git_config_get_string_buf(&local_buf, parent_cfg->cfg, name),
+	check_error_long(git_config_get_string_buf(&(lua_buf->buf), parent_cfg->cfg, name),
 	    "Unable to get string buffer from the config", NULL);
-	lua_buf->buf  = &local_buf;
 
 	return 1;
 }
@@ -416,16 +401,14 @@
 	const char *path_value = luaL_checkstring(L, 1);
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf  = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-	check_error_long(git_config_parse_path(&local_buf, path_value),
+	check_error_long(git_config_parse_path(&(lua_buf->buf), path_value),
 	    "Error parsing string as path value", NULL);
-	lua_buf->buf  = &local_buf;
 
 	return 1;
 }
diff -uNr luagit2-master/src/luagit2/describe/lua_describe.c luagit2-master_patched/src/luagit2/describe/lua_describe.c
--- luagit2-master/src/luagit2/describe/lua_describe.c	2020-09-17 22:40:30.943462925 +0200
+++ luagit2-master_patched/src/luagit2/describe/lua_describe.c	2020-09-17 22:40:50.539623735 +0200
@@ -121,19 +121,15 @@
 		parse_option_table(L, 2, atDescribeFormatOptions, sizeof(atDescribeFormatOptions)/sizeof(atDescribeFormatOptions[0]), &opts);
 	}
 
-	luagit2_buf *lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf = NULL;
+	luagit2_buf *lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(luagit2_buf));
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-
-	check_error_long(git_describe_format(&local_buf, lua_describe_res->describe_result, &opts),
+	check_error_long(git_describe_format(&(lua_buf->buf), lua_describe_res->describe_result, &opts),
 	    "Error formatting describe result to buf ", NULL);
 
-	lua_buf->buf  = &local_buf;
-
 	return 1;
 }
 
diff -uNr luagit2-master/src/luagit2/diff/lua_diff.c luagit2-master_patched/src/luagit2/diff/lua_diff.c
--- luagit2-master/src/luagit2/diff/lua_diff.c	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/diff/lua_diff.c	2020-09-17 22:12:08.775991000 +0200
@@ -179,18 +179,14 @@
 	const size_t width = luaL_checknumber(L, 3);
 
 	luagit2_buf *lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-
-	check_error_long(git_diff_stats_to_buf(&local_buf, lua_diff_stats->diff_stats, lua_stats_format->stats_format, width),
+	check_error_long(git_diff_stats_to_buf(&(lua_buf->buf), lua_diff_stats->diff_stats, lua_stats_format->stats_format, width),
 	    "Error converting diff stats to buff ", NULL);
 
-	lua_buf->buf  = &local_buf;
-
 	return 1;
 }
 
@@ -204,18 +200,14 @@
 	const luagit2_diff_format *lua_diff_format = (luagit2_diff_format *)luaL_checkudata(L, 2, "luagit2_diff_format");
 
 	luagit2_buf *lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-
-	check_error_long(git_diff_to_buf(&local_buf, lua_diff->diff, lua_diff_format->diff_format),
+	check_error_long(git_diff_to_buf(&(lua_buf->buf), lua_diff->diff, lua_diff_format->diff_format),
 	    "Error converting diff to buff ", NULL);
 
-	lua_buf->buf  = &local_buf;
-
 	return 1;
 }
 
diff -uNr luagit2-master/src/luagit2/lua_objects.h luagit2-master_patched/src/luagit2/lua_objects.h
--- luagit2-master/src/luagit2/lua_objects.h	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/lua_objects.h	2020-09-17 21:34:58.402417088 +0200
@@ -8,7 +8,7 @@
 } luagit2_cred_object;
 
 typedef struct {
-	git_buf *buf;
+	git_buf buf;
 } luagit2_buf;
 
 typedef struct {
diff -uNr luagit2-master/src/luagit2/object/lua_object.c luagit2-master_patched/src/luagit2/object/lua_object.c
--- luagit2-master/src/luagit2/object/lua_object.c	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/object/lua_object.c	2020-09-17 22:09:37.159055395 +0200
@@ -151,16 +151,14 @@
 	luagit2_buf *lua_out_buf;
 
 	lua_out_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_out_buf));
-	lua_out_buf->buf = NULL;
+	lua_git_buf_init(lua_out_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL,0);
-	check_error_long(git_object_short_id(&local_buf, lua_object->object),
+	check_error_long(git_object_short_id(&(lua_out_buf->buf), lua_object->object),
 	    "Unable to get abbreviated OID", NULL);
 
-	lua_out_buf->buf  = &local_buf;
 	return 1;
 }
 
diff -uNr luagit2-master/src/luagit2/repository/lua_repository.c luagit2-master_patched/src/luagit2/repository/lua_repository.c
--- luagit2-master/src/luagit2/repository/lua_repository.c	2019-06-25 16:05:14.000000000 +0200
+++ luagit2-master_patched/src/luagit2/repository/lua_repository.c	2020-09-17 22:12:20.252059655 +0200
@@ -285,16 +285,14 @@
 	const luagit2_repository *lua_repo = (luagit2_repository *)luaL_checkudata(L, 1,"luagit2_repository");
 
 	lua_buf = (luagit2_buf *)lua_newuserdata(L, sizeof(*lua_buf));
-	lua_buf->buf  = NULL;
+	lua_git_buf_init(lua_buf);
 
 	luaL_newmetatable(L, "luagit2_buf");
 
 	lua_setmetatable(L, -2);
 
-	git_buf local_buf = GIT_BUF_INIT_CONST(NULL, 0);
-	check_error_long(git_repository_message(&local_buf, lua_repo->repo),
+	check_error_long(git_repository_message(&(lua_buf->buf), lua_repo->repo),
 	    "Error getting repository message", NULL);
-	lua_buf->buf  = &local_buf;
 
 	return 1;
 }
