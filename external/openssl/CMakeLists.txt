cmake_minimum_required(VERSION 3.7)

PROJECT("openssl")

INCLUDE(ExternalProject)

# Python is used for the patch tool.
FIND_PACKAGE(PythonInterp 2.7 REQUIRED)

#----------------------------------------------------------------------------
#
# Build the project.
#
FIND_PACKAGE(net.zlib-zlib REQUIRED CONFIG)
GET_TARGET_PROPERTY(ZLIB_LIBRARY net.zlib-zlib::zlibstatic LOCATION)
SET(ZLIB_INCLUDE_DIR net.zlib-zlib_INCLUDE_DIR)

IF(${CMAKE_CROSSCOMPILING})
	IF(CMAKE_SYSTEM_NAME STREQUAL "Windows")
		IF(CMAKE_SYSTEM_PROCESSOR STREQUAL "i686")
			SET(OPENSSL_CONFIGURE_COMMAND "${CMAKE_CURRENT_BINARY_DIR}/openssl/src/TARGET_openssl/Configure")
			SET(OPENSSL_CONFIGURE_TARGET "mingw")
			SET(OPENSSL_CROSS_COMPILE_PREFIX "--cross-compile-prefix=${CONFIGURE_HOST}-")
		ELSEIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
			SET(OPENSSL_CONFIGURE_COMMAND "${CMAKE_CURRENT_BINARY_DIR}/openssl/src/TARGET_openssl/Configure")
			SET(OPENSSL_CONFIGURE_TARGET "mingw64")
			SET(OPENSSL_CROSS_COMPILE_PREFIX "--cross-compile-prefix=${CONFIGURE_HOST}-")
		ELSE(CMAKE_SYSTEM_PROCESSOR STREQUAL "i686")
			MESSAGE(FATAL_ERROR "Unsupported system processor on windows platform: ${CMAKE_SYSTEM_PROCESSOR}")
		ENDIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "i686")
	ELSE(CMAKE_SYSTEM_NAME "Windows")
		SET(OPENSSL_CONFIGURE_COMMAND "${CMAKE_CURRENT_BINARY_DIR}/openssl/src/TARGET_openssl/config")
		SET(OPENSSL_CONFIGURE_TARGET "")
		SET(OPENSSL_CROSS_COMPILE_PREFIX "--cross-compile-prefix=${CONFIGURE_HOST}-")
	ENDIF(CMAKE_SYSTEM_NAME "Windows")
ELSE(${CMAKE_CROSSCOMPILING})
	SET(OPENSSL_CONFIGURE_COMMAND "${CMAKE_CURRENT_BINARY_DIR}/openssl/src/TARGET_openssl/config")
	SET(OPENSSL_CONFIGURE_TARGET "")
	SET(OPENSSL_CROSS_COMPILE_PREFIX "")
ENDIF(${CMAKE_CROSSCOMPILING})

ExternalProject_Add(TARGET_openssl
                    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/openssl
                    URL ${CMAKE_CURRENT_SOURCE_DIR}/openssl-1.1.1g.tar.gz
                    URL_HASH SHA1=b213a293f2127ec3e323fb3cfc0c9807664fd997
                    CONFIGURE_COMMAND ${OPENSSL_CONFIGURE_COMMAND} ${OPENSSL_CONFIGURE_TARGET} --prefix=${CMAKE_CURRENT_BINARY_DIR}/install ${OPENSSL_CROSS_COMPILE_PREFIX} --with-zlib-include=${ZLIB_INCLUDE_DIR} --with-zlib-lib=${ZLIB_LIBRARY} no-shared
                    BUILD_COMMAND make
                    INSTALL_COMMAND make install
)
